<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_alias_templates">
    <sys_alias_templates action="INSERT_OR_UPDATE">
        <default_data_template>{&#13;
	"credential": {&#13;
		"api_key": "155798cb85b7237a5e381e77917d757f",&#13;
		"name": "AviationStack Spoke Credential",&#13;
		"table": "api_key_credentials"&#13;
	},&#13;
	"connection": {&#13;
		"use_mid": false,&#13;
		"connection_url": "https://api.aviationstack.com",&#13;
		"name": "",&#13;
		"table": "http_connection"&#13;
	}&#13;
}</default_data_template>
        <dynamic_data_schema>{&#13;
	"connection_fields": [{&#13;
		"name": "connection.name",&#13;
		"label": "Connection Name",&#13;
		"type": "text",&#13;
		"defaultValue": "&lt;provider-name&gt; Spoke Connection",&#13;
		"hint": "Display name for the Connection", &#13;
                "mandatory":true&#13;
	}, {&#13;
		"name": "connection.connection_url",&#13;
		"label": "Connection URL",&#13;
		"type": "text",&#13;
		"defaultValue": "https://&lt;provider-domain-name&gt;.com",&#13;
		"hint": "Connection URL for provider", &#13;
                "mandatory":true&#13;
	}],&#13;
	"credential_fields": [{&#13;
		"name": "credential.api_key",&#13;
		"label": "API Key",&#13;
		"type": "password",&#13;
		"defaultValue": "",&#13;
		"hint": "API Key for provider",&#13;
                "mandatory":true&#13;
	}]&#13;
}</dynamic_data_schema>
        <name>AviationStack</name>
        <on_edit_script><![CDATA[(function execute(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData) {
   // aliasId: sys_id of the alias record
   // connectionSysId: sys_id of the connection record created by using the default and dynamic data
   // jsonDefaultData (String): The default JSON template data from template table
   // e.g. var jsonDefaultParsed = JSON.parse(jsonDefaultData);
   //      gs.info("default connection url = " + jsonDefaultParsed["connection"]["connection_url"]);
   // jsonDynamicData (String): User input based on the key/values defined in "Dynamic Data"
   // e.g. var jsonDynamicParsed = JSON.parse(jsonDynamicData);
   //      gs.info("dynamic connection url = " + jsonDynamicParsed["connection.connection_url"]);
})(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData);
]]></on_edit_script>
        <post_process_script><![CDATA[(function execute(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData) {
   // aliasId: sys_id of the alias record
   // connectionSysId: sys_id of the connection record created by using the default and dynamic data
   // jsonDefaultData (String): The default JSON template data from template table
   // e.g. var jsonDefaultParsed = JSON.parse(jsonDefaultData);
   //      gs.info("default connection url = " + jsonDefaultParsed["connection"]["connection_url"]);
   // jsonDynamicData (String): User input based on the key/values defined in "Dynamic Data"
   // e.g. var jsonDynamicParsed = JSON.parse(jsonDynamicData);
   //      gs.info("dynamic connection url = " + jsonDynamicParsed["connection.connection_url"]);
})(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData);
]]></post_process_script>
        <pre_edit_script><![CDATA[(function execute(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData) {
   // aliasId: sys_id of the alias record.
   // connectionSysId: sys_id of the connection record created by using the default and dynamic data.
   // jsonDefaultData (String): The default JSON template data from template table.
   // e.g. var jsonDefaultParsed = JSON.parse(jsonDefaultData);
   //      gs.info("default connection url = " + jsonDefaultParsed["connection"]["connection_url"]);
   // jsonDynamicData (String): Current values of Connection and Credential fields (except Password fields) based on the key-value pairs defined in "Dynamic Data".
   // e.g. var jsonDynamicParsed = JSON.parse(jsonDynamicData);
   //      gs.info("dynamic connection url = " + jsonDynamicParsed["connection.connection_url"]);

   //returns array of objects. Each object has name-value pairs for populating additional fields values in connections dashboard in the edit view.
   //In this example script, additionalField1, additionalField2 are additional fields.
   //Here we define calcAdditionalField1(), calcAdditionalField2() functions in the script
   //to calculate current values for additionalField1, additionalField2.

   //return [{
   //         name: "additionalField1"
   //         value: calcAdditionalField1(),
   //    },
   //    {
   //         name: "additionalField2"
   //         value: calcAdditionalField2(),
   //    }
   //];

   return [];
})(aliasId, connectionSysId, jsonDefaultData, jsonDynamicData);
]]></pre_edit_script>
        <sys_class_name>sys_alias_templates</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-01-22 01:20:52</sys_created_on>
        <sys_id>c08dacf0c35712104b933342b401314c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AviationStack</sys_name>
        <sys_package display_value="Flight Info Spoke" source="x_1105922_flight_0">951fd0fcc3d312104b933342b40131d7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Flight Info Spoke">951fd0fcc3d312104b933342b40131d7</sys_scope>
        <sys_update_name>sys_alias_templates_c08dacf0c35712104b933342b401314c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-01-22 01:20:52</sys_updated_on>
    </sys_alias_templates>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>c08dacf0c35712104b933342b401314c</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-01-22 01:20:51</sys_created_on>
        <sys_id>6a5eacf0c35712104b933342b40131de</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-01-22 01:20:51</sys_updated_on>
        <table>sys_alias_templates</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
